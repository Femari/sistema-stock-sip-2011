/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * pnlPPC_DisponibilidadProductos.java
 *
 * Created on 16/07/2011, 00:44:29
 */
package Presentacion.ProcesarPedidoCliente;

import Negocio.Modelo.DetalleDisponibilidadProducto;
import Negocio.Modelo.DetallePedidoCliente;
import Negocio.Modelo.Producto;
import Negocio.ProcesarPedidoCliente;
import Persistencia.ProductoMapper;
import Presentacion.SIPGUIView;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author NicolasM
 */
public class pnlPPC_DisponibilidadProductos extends javax.swing.JPanel {
    
    private int nroPaso;
    private pnlProcesarPedidoCliente parent;
    private ProcesarPedidoCliente proceso;
    private DefaultTableModel tableModel;

    /** Creates new form pnlPPC_DisponibilidadProductos */
    public pnlPPC_DisponibilidadProductos(pnlProcesarPedidoCliente parent, ProcesarPedidoCliente proceso, int nroPaso) {
         tableModel = new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Stock deposito", "Stock pedidos", "Disponibilidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        //tblDetalleDisponibilidad.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        initComponents();
        tblDetalleDisponibilidad.getColumnModel().getColumn(0).setPreferredWidth(120); //producto
        tblDetalleDisponibilidad.getColumnModel().getColumn(1).setPreferredWidth(30); //cantidad
        tblDetalleDisponibilidad.getColumnModel().getColumn(2).setPreferredWidth(30); //stock deposito
        tblDetalleDisponibilidad.getColumnModel().getColumn(3).setPreferredWidth(30); //stock pedidos
        tblDetalleDisponibilidad.getColumnModel().getColumn(4).setPreferredWidth(200); //disponibilidad
        
        this.proceso = proceso;
        this.parent = parent;
        this.nroPaso = nroPaso;
        
    }

    @Override
    public void setVisible(boolean visible){
        super.setVisible(visible);
        
        if(visible){
            CargarGrilla();
            SIPGUIView.getInstance().SeleccionarNumeroPaso(nroPaso);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSiguiente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalleDisponibilidad = new javax.swing.JTable();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Presentacion.SIPGUIApp.class).getContext().getResourceMap(pnlPPC_DisponibilidadProductos.class);
        btnSiguiente.setText(resourceMap.getString("btnSiguiente.text")); // NOI18N
        btnSiguiente.setName("btnSiguiente"); // NOI18N
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblDetalleDisponibilidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblDetalleDisponibilidad.setModel(tableModel);
        tblDetalleDisponibilidad.setName("tblDetalleDisponibilidad"); // NOI18N
        jScrollPane1.setViewportView(tblDetalleDisponibilidad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSiguiente)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        this.SiguientePaso();
}//GEN-LAST:event_btnSiguienteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetalleDisponibilidad;
    // End of variables declaration//GEN-END:variables

    private void SiguientePaso(){
        parent.SiguientePaso(nroPaso);
        
    }

    public void CargarGrilla() {
        ArrayList<DetalleDisponibilidadProducto> arrayDetalleDisponibilidad = proceso.VerificarDisponibilidadProductos();
        
        for (DetallePedidoCliente sDetallePedidoCliente: proceso.getPedidoCliente().getArrayDetallePedidoCliente()){
            
            tableModel.addRow(ArmarFila(sDetallePedidoCliente, arrayDetalleDisponibilidad));
        }
        
    }
    
    private Object[] ArmarFila(DetallePedidoCliente xDetallePedidoCliente, ArrayList<DetalleDisponibilidadProducto> xArrayDetalleDisponibilidad){
        String colProducto = xDetallePedidoCliente.getProducto().getNombre();
        int colCantidad = xDetallePedidoCliente.getCantidad();
        int colStockDeposito = proceso.ObtenerStockLibreDeposito(xDetallePedidoCliente.getProducto());
        int colStockPedidos = 0;
        DetalleDisponibilidadProducto sDetalleDisponibilidadProducto = BuscarDetalleDisponibilidadPorProducto(xDetallePedidoCliente.getProducto(), xArrayDetalleDisponibilidad);
        if (colStockDeposito < colCantidad){
            colStockPedidos = sDetalleDisponibilidadProducto.getCantidadDisponible();
        }
        String colDisponibilidad = sDetalleDisponibilidadProducto.getDescripcionEstado();        
        
        
        return new Object[]{colProducto, colCantidad, colStockDeposito, colStockPedidos, colDisponibilidad};
    }
    
    private DetalleDisponibilidadProducto BuscarDetalleDisponibilidadPorProducto(Producto producto, ArrayList<DetalleDisponibilidadProducto> xArrayDetalleDisponibilidad){
        for(DetalleDisponibilidadProducto detalle : xArrayDetalleDisponibilidad)
        {
            if(detalle.getProducto().equals(producto))
                return detalle;
        }
        return null;
    }
    
   
   
}
